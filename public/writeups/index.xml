<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Writeup on 3HLD</title>
    <link>http://localhost:1313/writeups/</link>
    <description>Recent content in Writeup on 3HLD</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="http://localhost:1313/writeups/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>l3akctf2025</title>
      <link>http://localhost:1313/writeups/l3akctf2025/</link>
      <pubDate>Mon, 23 Jun 2025 18:30:32 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/l3akctf2025/</guid>
      <description> l3akctf2025 Performance Summary CTFs: 8/22 Total points: 3863 Position: 40 Rating points: 7.132 Writeups Category flagguessr dumber </description>
    </item>
    
    <item>
      <title>MaltaCTF 2025</title>
      <link>http://localhost:1313/writeups/maltactf2025/</link>
      <pubDate>Mon, 23 Jun 2025 18:30:32 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/maltactf2025/</guid>
      <description> MaltaCTF 2025 Performance Summary Total points: 301 Position: 85 Rating points: ? Writeups Category Fancy </description>
    </item>
    
    <item>
      <title>Some note on MXSS</title>
      <link>http://localhost:1313/writeups/mxss/</link>
      <pubDate>Mon, 23 Jun 2025 18:30:32 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/mxss/</guid>
      <description>DEEP DOWN TO DOMPURIFY Some note when learning mxss. Source : https://mizu.re/post/exploring-the-dompurify-library-bypasses-and-fixes
DOWPURFIY WORKFLOWS : initDocument : Dùng API DOMParser để parse dữ liệu đúng như Browser parse createNodeIterator : Dùng API NodeIterator để iterate qua tất cả các node sanitizeElement : Kiểm tra tag allowed or not _sanitizeShadowDOM : The NodeIterator API doesn&amp;rsquo;t iterate over the template tag by default. Recursively sanitizes when it reaches a DocumentFragment. _sanitizeAttributes : dùng dom apis để sanitize HTML attributes .</description>
    </item>
    
    <item>
      <title>Some note on Prototype pollution to RCE</title>
      <link>http://localhost:1313/writeups/pp2rce/</link>
      <pubDate>Mon, 23 Jun 2025 18:30:32 +0200</pubDate>
      
      <guid>http://localhost:1313/writeups/pp2rce/</guid>
      <description>DEEP DOWN TO EJS Example usage : Đơn giản như sau thui : const ejs = require(&amp;quot;ejs&amp;quot;) const template = &#39;&amp;lt;h1&amp;gt;Hello &amp;lt;%= name %&amp;gt;&amp;lt;/h1&amp;gt;&#39;; ejs.clearCache(); const data = { name: &amp;quot;12113awefeaw&amp;quot; } const compiled = ejs.render(template, data, {}); console.log(compiled.toString()) How ejs works Ta cùng đọc qua về hàm render :
exports.render = function (template, d, o) { var data = d || utils.createNullProtoObjWherePossible(); var opts = o || utils.createNullProtoObjWherePossible(); // No options object -- if there are optiony names // in the data, copy them to options if (arguments.</description>
    </item>
    
  </channel>
</rss>